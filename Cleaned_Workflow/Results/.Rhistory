left_join(module3, by="target_id")
test$significant <- na_replace(test$significant , 0)
test$ATgene_ID <-  substr(test$ATgene_ID, 1,9)
View(test)
geneList_module3 <- test
names(geneList_module3) <- unlist(lapply(strsplit(test$ATgene_ID, split = ".", fixed = T), function(x)x[1]))
head(geneList_module3)
View(geneList_module3)
View(test)
geneList_module3 <- test
names(geneList_module3) <- unlist(lapply(strsplit(test$ATgene_ID, split = ".", fixed = T), function(x)x[1]))
View(my_network_modules)
modules <- my_network_modules %>%
left_join(ATnames, by = 'ATgene_ID') %>%
select(gene_ID, ATgene_ID, module) %>%
na.omit(ATgene_ID) %>%
na.omit(module)
DE_24hr <- tmp_24hr %>%
select(ATgene_ID, qval)
View(ATnames)
modules <- my_network_modules %>%
rename(target_id = gene_ID)
modules <- my_network_modules %>%
rename(target_id = gene_ID) %>%
left_join(ATnames, by = 'target_id') %>%
select(target_id, ATgene_ID, module) %>%
na.omit(ATgene_ID) %>%
na.omit(module)
View(modules)
View(my_network_modules)
modules <- my_network_modules %>%
rename(target_id = gene_ID) %>%
left_join(ATnames, by = 'target_id') %>%
select(target_id, ATgene_ID, module) %>%
na.omit(ATgene_ID) %>%
na.omit(module)
modules <- my_network_modules %>%
rename(target_id = gene_ID) %>%
left_join(ATnames, by = 'target_id') %>%
dplyr::select(target_id, ATgene_ID, module) %>%
na.omit(ATgene_ID) %>%
na.omit(module)
modules <- my_network_modules %>%
rename(target_id = gene_ID) %>%
left_join(ATnames, by = 'target_id') %>%
dplyr::select(target_id, ATgene_ID, module)
modules <- my_network_modules %>%
rename(target_id = gene_ID) %>%
left_join(ATnames, by = 'target_id')
modules <- ATnames %>%
rename(gene_ID = target_id) %>%
left_join(my_network_modules, by = 'gene_ID')
DEmodules <- modules %>%
select(ATgene_ID, module)
DEmodules <- modules %>%
select(ATgene_ID.x, module)
DEmodules$ATgene_ID.x <-  substr(DEmodules$ATgene_ID.x, 1,9)
tmp_DEmodules <- ifelse(DEmodules$module == 3, 1, 0)
View(DEmodules)
head(tmp_DEmodules)
tmp_DEmodules <- na_replace(tmp_DEmodules, 0)
head(tmp_DEmodules)
geneList_module3 <- tmp_DEmodules
names(geneList_module3) <- unlist(lapply(strsplit(DEmodules$ATgene_ID, split = ".", fixed = T), function(x)x[1]))
names(geneList_module3) <- unlist(lapply(strsplit(DEmodules$ATgene_ID.x, split = ".", fixed = T), function(x)x[1]))
head(geneList_24hr)
head(geneList_module3)
GOdata_24hr <- new("topGOdata",
ontology = "BP",
allGenes = geneList_module3,
geneSelectionFun = function(x)(x == 1),
annot = annFUN.org, mapping = "org.At.tair.db")
GOdata_module3 <- new("topGOdata",
ontology = "BP",
allGenes = geneList_module3,
geneSelectionFun = function(x)(x == 1),
annot = annFUN.org, mapping = "org.At.tair.db")
resultFisher_module3 <- runTest(geneList_module3, algorithm = "elim", statistic = "fisher")
resultFisher_module3 <- runTest(GOdata_module3, algorithm = "elim", statistic = "fisher")
tab_module3 <- GenTable(GOdata_module3, raw.p.value = resultFisher_module3, topNodes = length(resultFisher_module3@score),
numChar = 1000)
head(tab_module3)
write.csv(tab_module3,"FishersExactModule3TableTopGO.csv")
modules <- ATnames %>%
rename(gene_ID = target_id) %>%
left_join(my_network_modules, by = 'gene_ID')
DEmodules <- modules %>%
select(ATgene_ID.x, module)
DEmodules$ATgene_ID.x <-  substr(DEmodules$ATgene_ID.x, 1,9)
tmp_DEmodules <- ifelse(DEmodules$module == 4, 1, 0)
tmp_DEmodules <- na_replace(tmp_DEmodules, 0)
head(tmp_DEmodules)
geneList_module4 <- tmp_DEmodules
names(geneList_module4) <- unlist(lapply(strsplit(DEmodules$ATgene_ID.x, split = ".", fixed = T), function(x)x[1]))
head(geneList_module4)
GOdata_module4 <- new("topGOdata",
ontology = "BP",
allGenes = geneList_module4,
geneSelectionFun = function(x)(x == 1),
annot = annFUN.org, mapping = "org.At.tair.db")
resultFisher_module4 <- runTest(GOdata_module4, algorithm = "elim", statistic = "fisher")
tab_module4 <- GenTable(GOdata_module4, raw.p.value = resultFisher_module4, topNodes = length(resultFisher_module4@score),
numChar = 1000)
head(tab_module4)
write.csv(tab_module4,"FishersExactModule4TableTopGO.csv")
modules <- ATnames %>%
rename(gene_ID = target_id) %>%
left_join(my_network_modules, by = 'gene_ID')
DEmodules <- modules %>%
select(ATgene_ID.x, module)
DEmodules$ATgene_ID.x <-  substr(DEmodules$ATgene_ID.x, 1,9)
tmp_DEmodules <- ifelse(DEmodules$module == 6, 1, 0)
tmp_DEmodules <- na_replace(tmp_DEmodules, 0)
head(tmp_DEmodules)
geneList_module6 <- tmp_DEmodules
names(geneList_module6) <- unlist(lapply(strsplit(DEmodules$ATgene_ID.x, split = ".", fixed = T), function(x)x[1]))
head(geneList_module6)
GOdata_module6 <- new("topGOdata",
ontology = "BP",
allGenes = geneList_module6,
geneSelectionFun = function(x)(x == 1),
annot = annFUN.org, mapping = "org.At.tair.db")
resultFisher_module6 <- runTest(GOdata_module6, algorithm = "elim", statistic = "fisher")
tab_module4 <- GenTable(GOdata_module6, raw.p.value = resultFisher_module6, topNodes = length(resultFisher_module6@score),
numChar = 1000)
head(tab_module6)
tab_module6 <- GenTable(GOdata_module6, raw.p.value = resultFisher_module6, topNodes = length(resultFisher_module6@score),
numChar = 1000)
head(tab_module6)
write.csv(tab_module6,"FishersExactModule6TableTopGO.csv")
modules <- ATnames %>%
rename(gene_ID = target_id) %>%
left_join(my_network_modules, by = 'gene_ID')
DEmodules <- modules %>%
select(ATgene_ID.x, module)
DEmodules$ATgene_ID.x <-  substr(DEmodules$ATgene_ID.x, 1,9)
tmp_DEmodules <- ifelse(DEmodules$module == 9, 1, 0)
tmp_DEmodules <- na_replace(tmp_DEmodules, 0)
head(tmp_DEmodules)
geneList_module9 <- tmp_DEmodules
names(geneList_module9) <- unlist(lapply(strsplit(DEmodules$ATgene_ID.x, split = ".", fixed = T), function(x)x[1]))
head(geneList_module9)
GOdata_module9 <- new("topGOdata",
ontology = "BP",
allGenes = geneList_module9,
geneSelectionFun = function(x)(x == 1),
annot = annFUN.org, mapping = "org.At.tair.db")
resultFisher_module9 <- runTest(GOdata_module9, algorithm = "elim", statistic = "fisher")
tab_module9 <- GenTable(GOdata_module9, raw.p.value = resultFisher_module9, topNodes = length(resultFisher_module9@score),
numChar = 1000)
head(tab_module9)
write.csv(tab_module9,"FishersExactModule9TableTopGO.csv")
modules <- ATnames %>%
rename(gene_ID = target_id) %>%
left_join(my_network_modules, by = 'gene_ID')
DEmodules <- modules %>%
select(ATgene_ID.x, module)
DEmodules$ATgene_ID.x <-  substr(DEmodules$ATgene_ID.x, 1,9)
tmp_DEmodules <- ifelse(DEmodules$module == 10, 1, 0)
tmp_DEmodules <- na_replace(tmp_DEmodules, 0)
head(tmp_DEmodules)
geneList_module10 <- tmp_DEmodules
names(geneList_module10) <- unlist(lapply(strsplit(DEmodules$ATgene_ID.x, split = ".", fixed = T), function(x)x[1]))
head(geneList_module10)
GOdata_module10 <- new("topGOdata",
ontology = "BP",
allGenes = geneList_module10,
geneSelectionFun = function(x)(x == 1),
annot = annFUN.org, mapping = "org.At.tair.db")
resultFisher_module10 <- runTest(GOdata_module10, algorithm = "elim", statistic = "fisher")
tab_module10 <- GenTable(GOdata_module10, raw.p.value = resultFisher_module10, topNodes = length(resultFisher_module10@score),
numChar = 1000)
head(tab_module10)
write.csv(tab_module10,"FishersExactModule10TableTopGO.csv")
modules <- ATnames %>%
rename(gene_ID = target_id) %>%
left_join(my_network_modules, by = 'gene_ID')
DEmodules <- modules %>%
select(ATgene_ID.x, module)
DEmodules$ATgene_ID.x <-  substr(DEmodules$ATgene_ID.x, 1,9)
tmp_DEmodules <- ifelse(DEmodules$module == 7, 1, 0)
tmp_DEmodules <- na_replace(tmp_DEmodules, 0)
head(tmp_DEmodules)
geneList_module7 <- tmp_DEmodules
names(geneList_module7) <- unlist(lapply(strsplit(DEmodules$ATgene_ID.x, split = ".", fixed = T), function(x)x[1]))
head(geneList_module7)
GOdata_module7 <- new("topGOdata",
ontology = "BP",
allGenes = geneList_module7,
geneSelectionFun = function(x)(x == 1),
annot = annFUN.org, mapping = "org.At.tair.db")
resultFisher_module7 <- runTest(GOdata_module10, algorithm = "elim", statistic = "fisher")
tab_module7 <- GenTable(GOdata_module7, raw.p.value = resultFisher_module7, topNodes = length(resultFisher_module7@score),
numChar = 1000)
head(tab_module7)
write.csv(tab_module7,"FishersExactModule7TableTopGO.csv")
modules <- ATnames %>%
rename(gene_ID = target_id) %>%
left_join(my_network_modules, by = 'gene_ID')
DEmodules <- modules %>%
select(ATgene_ID.x, module)
DEmodules$ATgene_ID.x <-  substr(DEmodules$ATgene_ID.x, 1,9)
tmp_DEmodules <- ifelse(DEmodules$module == 2, 1, 0)
tmp_DEmodules <- na_replace(tmp_DEmodules, 0)
head(tmp_DEmodules)
geneList_module2 <- tmp_DEmodules
names(geneList_module2) <- unlist(lapply(strsplit(DEmodules$ATgene_ID.x, split = ".", fixed = T), function(x)x[1]))
head(geneList_module2)
GOdata_module2 <- new("topGOdata",
ontology = "BP",
allGenes = geneList_module2,
geneSelectionFun = function(x)(x == 1),
annot = annFUN.org, mapping = "org.At.tair.db")
resultFisher_module2 <- runTest(GOdata_module2, algorithm = "elim", statistic = "fisher")
tab_module2 <- GenTable(GOdata_module2, raw.p.value = resultFisher_module2, topNodes = length(resultFisher_module2@score),
numChar = 1000)
head(tab_module2)
write.csv(tab_module2,"FishersExactModule2TableTopGO.csv")
modules <- ATnames %>%
rename(gene_ID = target_id) %>%
left_join(my_network_modules, by = 'gene_ID')
DEmodules <- modules %>%
select(ATgene_ID.x, module)
DEmodules$ATgene_ID.x <-  substr(DEmodules$ATgene_ID.x, 1,9)
tmp_DEmodules <- ifelse(DEmodules$module == 16, 1, 0)
tmp_DEmodules <- na_replace(tmp_DEmodules, 0)
head(tmp_DEmodules)
geneList_module16 <- tmp_DEmodules
names(geneList_module16) <- unlist(lapply(strsplit(DEmodules$ATgene_ID.x, split = ".", fixed = T), function(x)x[1]))
head(geneList_module16)
GOdata_module16 <- new("topGOdata",
ontology = "BP",
allGenes = geneList_module16,
geneSelectionFun = function(x)(x == 1),
annot = annFUN.org, mapping = "org.At.tair.db")
resultFisher_module16 <- runTest(GOdata_module16, algorithm = "elim", statistic = "fisher")
tab_module16 <- GenTable(GOdata_module16, raw.p.value = resultFisher_module16, topNodes = length(resultFisher_module16@score),
numChar = 1000)
head(tab_module16)
write.csv(tab_module16,"FishersExactModule16TableTopGO.csv")
n_distinct(geneList_module2)
nrow(geneList_module16[geneList_module16 == '1')
length(which(geneList_module16==1))
length(which(geneList_module3==1))
length(which(geneList_module2==1))
length(which(geneList_module3==1))
length(which(geneList_module2==1))
length(which(geneList_module4==1))
length(which(geneList_module10==1))
length(which(geneList_module7==1))
length(which(geneList_module9==1))
length(which(geneList_module6==1))
length(which(geneList_module16==1))
tab_module3$raw.p.value <- as.numeric(tab_module3$raw.p.value)
tab_module3 <- tab_module3[tab_module3$raw.p.value < 0.05,] # filter terms for KS p<0.05
tab_module3
options(scipen=0)
tab_module3 <- tab_module3 %>%
filter(Term != "biological_process")
ntop <- 30
ggdata_module3 <- tab_module3[1:ntop,]
ggdata_module3$Term <- factor(ggdata_module3$Term, levels = rev(ggdata_module3$Term))
ggplot(ggdata_module3, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
scale_y_continuous(limits=c(0.000,0.009),breaks=c(0.000, 0.002,0.004, 0.006,0.008)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 3 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
ggplot(ggdata_module3, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 3 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
ntop <- 30
ggdata_module4 <- tab_module4[1:ntop,]
ggdata_module4$Term <- factor(ggdata_module4$Term, levels = rev(ggdata_module4$Term))
ggplot(ggdata_module4, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 4 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
tab_module4$raw.p.value <- as.numeric(tab_module4$raw.p.value)
tab_module4 <- tab_module4[tab_module4$raw.p.value < 0.05,] # filter terms for KS p<0.05
tab_module4
options(scipen=0)
tab_module4 <- tab_module3 %>%
filter(Term != "biological_process")
ntop <- 30
ggdata_module4 <- tab_module4[1:ntop,]
ggdata_module4$Term <- factor(ggdata_module4$Term, levels = rev(ggdata_module4$Term))
ggplot(ggdata_module4, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 4 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
tab_module4$raw.p.value <- as.numeric(tab_module4$raw.p.value)
tab_module4 <- tab_module4[tab_module4$raw.p.value < 0.05,] # filter terms for KS p<0.05
tab_module4
options(scipen=0)
tab_module4 <- tab_module4 %>%
filter(Term != "biological_process")
ntop <- 30
ggdata_module4 <- tab_module4[1:ntop,]
ggdata_module4$Term <- factor(ggdata_module4$Term, levels = rev(ggdata_module4$Term))
ggplot(ggdata_module4, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 4 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
tab_module4$raw.p.value <- as.numeric(tab_module4$raw.p.value)
tab_module4 <- tab_module4[tab_module4$raw.p.value < 0.05,] # filter terms for KS p<0.05
tab_module4
options(scipen=0)
tab_module4 <- tab_module4 %>%
filter(Term != "biological_process")
ntop <- 30
tab_module4 <- GenTable(GOdata_module4, raw.p.value = resultFisher_module4, topNodes = length(resultFisher_module4@score),
numChar = 1000)
head(tab_module4)
write.csv(tab_module4,"FishersExactModule4TableTopGO.csv")
tab_module4$raw.p.value <- as.numeric(tab_module4$raw.p.value)
tab_module4 <- tab_module4[tab_module4$raw.p.value < 0.05,] # filter terms for KS p<0.05
tab_module4$raw.p.value <- as.numeric(tab_module4$raw.p.value)
tab_module4 <- GenTable(GOdata_module4, raw.p.value = resultFisher_module4, topNodes = length(resultFisher_module4@score),
numChar = 1000)
head(tab_module4)
options(scipen=0)
tab_module4$raw.p.value <- as.numeric(tab_module4$raw.p.value)
tab_module4
tab_module4$raw.p.value <- as.numeric(tab_module4$raw.p.value)
tab_module4 <- tab_module4[tab_module4$raw.p.value < 0.05,] # filter terms for KS p<0.05
tab_module4
options(scipen=0)
tab_module4 <- tab_module4 %>%
filter(Term != "biological_process")
ntop <- 30
ggdata_module4 <- tab_module4[1:ntop,]
ggdata_module4$Term <- factor(ggdata_module4$Term, levels = rev(ggdata_module4$Term))
ggplot(ggdata_module4, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 4 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
TopGoModule4 <- ggplot(ggdata_module4, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 4 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
TopGoModule3 <-ggplot(ggdata_module3, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 3 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
tab_module6$raw.p.value <- as.numeric(tab_module6$raw.p.value)
tab_module6 <- tab_module6[tab_module6$raw.p.value < 0.05,] # filter terms for KS p<0.05
tab_module6
options(scipen=0)
tab_module6 <- tab_module6 %>%
filter(Term != "biological_process")
ntop <- 30
ggdata_module6 <- tab_module6[1:ntop,]
ggdata_module6$Term <- factor(ggdata_module6$Term, levels = rev(ggdata_module6$Term))
TopGoModule6 <- ggplot(ggdata_module6, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 6 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
TopGoModule6
tab_module9$raw.p.value <- as.numeric(tab_module9$raw.p.value)
tab_module9 <- tab_module9[tab_module9$raw.p.value < 0.05,] # filter terms for KS p<0.05
tab_module9
tab_module9 <- GenTable(GOdata_module9, raw.p.value = resultFisher_module9, topNodes = length(resultFisher_module9@score),
numChar = 1000)
head(tab_module9)
tab_module9$raw.p.value <- as.numeric(tab_module9$raw.p.value)
tab_module9 <- tab_module9[tab_module9$raw.p.value < 0.05,] # filter terms for KS p<0.05
tab_module9
options(scipen=0)
tab_module9 <- tab_module9 %>%
filter(Term != "biological_process")
ntop <- 30
ggdata_module9 <- tab_module9[1:ntop,]
ggdata_module9$Term <- factor(ggdata_module9$Term, levels = rev(ggdata_module9$Term))
TopGoModule9 <- ggplot(ggdata_module9, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 9 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
TopGoModule9
wrap_plots(TopGoModule3, TopGoModule4, TopGoModule6, TopGoModule9, nrow = 1)
ggsave("ModuleGOplots", height = 3.5, width = 12, bg = "white")
wrap_plots(TopGoModule3, TopGoModule4, TopGoModule6, TopGoModule9, nrow = 1)
ggsave("ModuleGOplots.png", height = 3.5, width = 12, bg = "white")
wrap_plots(TopGoModule3, TopGoModule4, TopGoModule6, TopGoModule9, nrow = 2)
ggsave("ModuleGOplots.png", height = 3.5, width = 20, bg = "white")
ggsave("ModuleGOplots.png", height = 10, width = 20, bg = "white")
tab_module10$raw.p.value <- as.numeric(tab_module10$raw.p.value)
tab_module10 <- tab_module10[tab_module10$raw.p.value < 0.05,] # filter terms for KS p<0.05
tab_module10
options(scipen=0)
tab_module10 <- tab_module10 %>%
filter(Term != "biological_process")
ntop <- 30
ggdata_module10<- tab_module10[1:ntop,]
ggdata_module10$Term <- factor(ggdata_module10$Term, levels = rev(ggdata_module10$Term))
TopGoModule10 <- ggplot(ggdata_module10, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 9 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
TopGoModule10
TopGoModule10 <- ggplot(ggdata_module10, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 10 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
TopGoModule10
tab_module7$raw.p.value <- as.numeric(tab_module7$raw.p.value)
tab_module7 <- tab_module7[tab_module7$raw.p.value < 0.05,] # filter terms for KS p<0.05
tab_module7
options(scipen=0)
tab_module7 <- tab_module7 %>%
filter(Term != "biological_process")
ntop <- 30
ggdata_module7<- tab_module7[1:ntop,]
ggdata_module7$Term <- factor(ggdata_module7$Term, levels = rev(ggdata_module7$Term))
TopGoModule7 <- ggplot(ggdata_module7, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 7 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
TopGoModule7
tab_module2$raw.p.value <- as.numeric(tab_module2$raw.p.value)
tab_module2 <- tab_module2[tab_module2$raw.p.value < 0.05,] # filter terms for KS p<0.05
tab_module2
options(scipen=0)
tab_module2 <- tab_module2 %>%
filter(Term != "biological_process")
ntop <- 30
ggdata_module2<- tab_module2[1:ntop,]
ggdata_module2$Term <- factor(ggdata_module2$Term, levels = rev(ggdata_module2$Term))
TopGoModule2 <- ggplot(ggdata_module2, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 7 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
TopGoModule7
TopGoModule2
TopGoModule2 <- ggplot(ggdata_module2, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 2 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
TopGoModule2
tab_module16$raw.p.value <- as.numeric(tab_module16$raw.p.value)
tab_module16 <- tab_module16[tab_module16$raw.p.value < 0.05,] # filter terms for KS p<0.05
tab_module16
options(scipen=0)
tab_module16 <- tab_module16 %>%
filter(Term != "biological_process")
ntop <- 30
ggdata_module16<- tab_module16[1:ntop,]
ggdata_module16$Term <- factor(ggdata_module16$Term, levels = rev(ggdata_module16$Term))
TopGoModule16 <- ggplot(ggdata_module16, aes(x = Term, y = raw.p.value, size = Significant, fill= 'green')) +
geom_point(shape = 21, fill ='darkgreen') +
scale_size(range = c(0.0,8.5)) +
xlab('Term') + ylab('p-value') +  guides(size = guide_legend(title = "Number of Genes")) +
labs(
title = 'Module 16 GO Biological processes',
subtitle = "Top 30 terms ordered by Fisher's Exact Test p-value") + coord_flip()
TopGoModule16
wrap_plots(TopGoModule3, TopGoModule4, TopGoModule6, TopGoModule9, TopGoModule10, TopGoModule7, TopGoModule2, TopGoModule16, nrow = 2)
ggsave("ModuleGOplots.png", height = 10, width = 20, bg = "white")
ggsave("ModuleGOplots.png", height = 10, width = 30, bg = "white")
ggsave("ModuleGOplots.png", height = 8, width = 25, bg = "white")
ggsave("ModuleGOplots.png", height = 8, width = 40, bg = "white")
wrap_plots(TopGoModule3, TopGoModule4, TopGoModule6, TopGoModule9, TopGoModule10, TopGoModule7, TopGoModule2, TopGoModule16, nrow = 4)
ggsave("ModuleGOplots.png", height = 40, width = 15, bg = "white")
wrap_plots(TopGoModule3, TopGoModule4, TopGoModule6, TopGoModule9, TopGoModule10, TopGoModule7, TopGoModule2, TopGoModule16, nrow = 2)
ggsave("ModuleGOplots.png", height = 15, width = 40, bg = "white")
wrap_plots(TopGoModule4, TopGoModule6, TopGoModule9, TopGoModule10, TopGoModule7, TopGoModule16, TopGoModule2, TopGoModule16, nrow = 2)
ggsave("ModuleGOplots.png", height = 15, width = 40, bg = "white")
