library(ggraph)
library(readxl)
library(patchwork)
library(RColorBrewer)
library(viridis)
library("tximport")
set.seed(666)
resultdir <- "/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/7_GeneCoexpressionAnalysis/AllTrapsAnalysis"   # you need to modify this line to match the path made by your BASH script
setwd(resultdir)
Exp_table <- read_csv("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/7_GeneCoexpressionAnalysis/Data/Blanco_tpm_all.csv", col_types = cols())
Metadata <-  read_csv("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/7_GeneCoexpressionAnalysis/Data/Metadata.csv", col_types = cols())
Exp_table_long <- Exp_table %>%
rename(gene_ID = `...1`) %>%
pivot_longer(cols = !gene_ID, names_to = "LibraryName", values_to = "tpm") %>%
mutate(logTPM = log10(tpm + 1))
Exp_table_log_wide <- Exp_table_long %>%
select(gene_ID, LibraryName, logTPM) %>%
pivot_wider(names_from = LibraryName, values_from = logTPM)
head(Exp_table_log_wide)
dim(Exp_table_log_wide)
my_pca <- prcomp(t(Exp_table_log_wide[, -1]))
pc_importance <- as.data.frame(t(summary(my_pca)$importance))
head(pc_importance, 20)
PCA_coord <- my_pca$x[, 1:10] %>%
as.data.frame() %>%
mutate(LibraryName = row.names(.)) %>%
full_join(Metadata %>%
select(LibraryName, Tissue, Time, Treatment, SampleName), by = "LibraryName")
PCA_coord <- PCA_coord %>% filter(Tissue == "Trap")
PCA_coord$Time <- as.numeric(PCA_coord$Time)
PCA_coord
Exp_table_long_averaged <- Exp_table_long %>%
full_join(PCA_coord, by = "LibraryName") %>%
group_by(gene_ID, Time, Treatment) %>%
summarise(mean.logTPM = mean(logTPM)) %>%
ungroup()
Exp_table_long_averaged_z <- Exp_table_long_averaged %>%
group_by(gene_ID) %>%
mutate(z.score = (mean.logTPM - mean(mean.logTPM))/sd(mean.logTPM)) %>%
ungroup()
head(Exp_table_long_averaged_z)
Expressed_genes <- Exp_table_long %>%
filter(tpm > 5) %>%
group_by(gene_ID) %>%
count() %>%
filter(n >= 2)
dim(Expressed_genes)
high_var_genes <- Exp_table_long_averaged_z %>%
filter(gene_ID %in% Expressed_genes$gene_ID) %>%
group_by(gene_ID) %>%
summarise(var = var(mean.logTPM)) %>%
ungroup() %>%
filter(var > quantile(var,0.5))
dim(high_var_genes)
high_var_genes %>%
filter(gene_ID %in% Baits$gene_ID)
all_var_and_ranks <- Exp_table_long_averaged_z %>%
group_by(gene_ID) %>%
summarise(var = var(mean.logTPM)) %>%
ungroup() %>%
mutate(rank = rank(var, ties.method = "average"))
bait_var <- all_var_and_ranks %>%
filter(gene_ID %in% Baits$gene_ID)
bait_var
all_var_and_ranks %>%
ggplot(aes(x = var, y = rank)) +
geom_rect(
xmax = max(high_var_genes$var),
xmin = min(high_var_genes$var),
ymax = nrow(all_var_and_ranks),
ymin = nrow(all_var_and_ranks) - nrow(high_var_genes),
fill = "dodgerblue2", alpha = 0.2
) +
geom_line(size = 1.1) +
geom_hline(
data = bait_var, aes(yintercept = rank),
color = "tomato1", size = 0.8, alpha = 0.5
) +
geom_vline(
data = bait_var, aes(xintercept = var),
color = "tomato1", size = 0.8, alpha = 0.5
) +
labs(y = "rank",
x = "var(log10(FPKM))",
caption = "Blue box = high var expressed genes.") +
theme_classic() +
theme(
text = element_text(size = 14),
axis.text = element_text(color = "black"),
plot.caption = element_text(hjust = 0)
)
Exp_table_long_averaged_z_high_var <- Exp_table_long_averaged_z %>%
filter(gene_ID %in% high_var_genes$gene_ID)
head(Exp_table_long_averaged_z_high_var)
Exp_table_long_averaged_z_high_var %>%
group_by(gene_ID) %>%
count() %>%
nrow()
compute_F <- function(data, gene){
anova_table = lm(logTPM ~ Time:Treatment, data %>%
filter(gene_ID == gene)) %>%
anova()
cbind(anova_table$`F value`[1], anova_table$`Pr(>F)`[1]) %>%
as.data.frame()
}
ANOVA_results <- purrr::map_dfr(
.x = Expressed_genes$gene_ID,
.f = compute_F,
data =  Exp_table_long %>%
full_join(PCA_coord, by = "LibraryName")
) %>%
cbind(gene_ID = Expressed_genes$gene_ID) %>%
as.data.frame() %>%
rename(
F_stat = V1,
p.value = V2
) %>%
mutate(FDR = p.adjust(p.value, method = "fdr"))
F_high_var_comparison <- ANOVA_results %>%
left_join(all_var_and_ranks, by = "gene_ID") %>%
mutate(high_F = case_when(
F_stat >= 2 ~ "high F",
T ~ "low F"
)) %>%
mutate(high_var = case_when(
gene_ID %in% high_var_genes$gene_ID ~ "high var",
T ~ "low var"
)) %>%
mutate(type = case_when(
high_F == "high F" &
high_var == "high var" ~ "both",
high_F == "high F" &
high_var == "low var" ~ "high F only",
high_F == "low F" &
high_var == "high var" ~ "high var only",
T ~ "neither"
))
F_var_scatter <- F_high_var_comparison %>%
ggplot(aes(x = F_stat, y = sqrt(var))) +
geom_point(aes(color = type), alpha = 0.5) +
scale_color_manual(values = brewer.pal(n = 8, "Set2")) +
labs(x = "F stat",
y = "sd(log10(TPM))",
color = NULL) +
theme_classic() +
theme(
legend.position = c(0.75, 0.75),
text = element_text(size = 14),
axis.text = element_text(color = "black")
)
F_var_scatter
F_dist <- F_high_var_comparison %>%
ggplot(aes(x = F_stat)) +
geom_histogram(bins = 100, fill = brewer.pal(8, "Set2")[2]) +
labs(x = NULL) +
theme_classic() +
theme(
text = element_text(size = 14),
axis.text = element_text(color = "black")
)
F_dist
var_dist <- F_high_var_comparison %>%
ggplot(aes(x = sqrt(var))) +
geom_histogram(bins = 100, fill = brewer.pal(8, "Set2")[3]) +
labs(x = NULL) +
theme_classic() +
theme(
text = element_text(size = 14),
axis.text = element_text(color = "black")
) +
coord_flip()
var_dist
blank <- F_high_var_comparison %>%
ggplot(aes(x = -log10(FDR), y = sqrt(var))) +
theme_void()
wrap_plots(
F_dist, blank,
F_var_scatter, var_dist,
nrow = 2, ncol = 2,
heights = c(0.35, 1),
widths = c(1, 0.35)
)
F_high_var_comparison %>%
group_by(type) %>%
count()
F_high_var_comparison %>%
group_by(high_var) %>%
count()
F_high_var_comparison %>%
group_by(high_F) %>%
count()
high_F_only_examples <- F_high_var_comparison %>%
filter(type == "high F only") %>%
slice_max(order_by = F_stat, n = 1) %>%
inner_join(Exp_table_long, by = "gene_ID") %>%
inner_join(PCA_coord, by = "LibraryName")
high_var_only_examples <- F_high_var_comparison %>%
filter(type == "high var only") %>%
slice_max(order_by = var, n = 1) %>%
inner_join(Exp_table_long, by = "gene_ID") %>%
inner_join(PCA_coord, by = "LibraryName")
high_var_high_F_examples <- F_high_var_comparison %>%
filter(type == "both") %>%
slice_max(order_by = F_stat, n = 1) %>%
inner_join(Exp_table_long, by = "gene_ID") %>%
inner_join(PCA_coord, by = "LibraryName")
neither_examples <- F_high_var_comparison %>%
filter(type == "neither") %>%
slice_max(order_by = var, n = 1) %>%
inner_join(Exp_table_long, by = "gene_ID") %>%
inner_join(PCA_coord, by = "LibraryName")
high_F_only_graphs <- high_F_only_examples %>%
ggplot(aes(x = Time, y = logTPM)) +
geom_point(aes(fill = Treatment), shape = 21, color = "white",
size = 3, alpha = 0.8, position = position_jitter(0.2, seed = 666)) +
scale_fill_manual(values = c("grey70", "tomato1")) +
labs(x = "time point",
y = "log10(TPM)",
title = paste0("high F only example\n",
high_F_only_examples$gene_ID)) +
theme_classic() +
theme(
text = element_text(size = 14),
axis.text = element_text(color = "black"),
plot.title = element_text(size = 12)
)
high_F_only_graphs
high_var_only_graphs <- high_var_only_examples %>%
ggplot(aes(x = Time, y = logTPM)) +
geom_point(aes(fill = Treatment), shape = 21, color = "white",
size = 3, alpha = 0.8, position = position_jitter(0.2, seed = 666)) +
scale_fill_manual(values = c("grey70", "tomato1")) +
labs(x = "time point",
y = "log10(TPM)",
title = paste0("high var only example\n",
high_var_only_examples$gene_ID)) +
theme_classic() +
theme(
text = element_text(size = 14),
axis.text = element_text(color = "black"),
plot.title = element_text(size = 12)
)
high_var_high_F_graphs <- high_var_high_F_examples %>%
ggplot(aes(x = Time, y = logTPM)) +
geom_point(aes(fill = Treatment), shape = 21, color = "white",
size = 3, alpha = 0.8, position = position_jitter(0.2, seed = 666)) +
scale_fill_manual(values = c("grey70", "tomato1")) +
labs(x = "time point",
y = "log10(TPM)",
title = paste0("high F high var example\n",
high_var_high_F_examples$gene_ID)) +
theme_classic() +
theme(
text = element_text(size = 14),
axis.text = element_text(color = "black"),
plot.title = element_text(size = 12)
)
low_var_low_F_graphs <- neither_examples %>%
ggplot(aes(x = Time, y = logTPM)) +
geom_point(aes(fill = Treatment), shape = 21, color = "white",
size = 3, alpha = 0.8, position = position_jitter(0.2, seed = 666)) +
scale_fill_manual(values = c("grey70", "tomato1")) +
labs(x = "time point",
y = "log10(TPM)",
title = paste0("low F low var example\n",
neither_examples$gene_ID)) +
theme_classic() +
theme(
text = element_text(size = 14),
axis.text = element_text(color = "black"),
plot.title = element_text(size = 12)
)
wrap_plots(
high_var_only_graphs,
high_var_high_F_graphs,
low_var_low_F_graphs,
high_F_only_graphs,
nrow = 2, guides = "collect"
) & theme(legend.position = "bottom")
high_var_or_high_F_genes <- F_high_var_comparison %>%
filter(type != "neither")
dim(high_var_or_high_F_genes)
Exp_table_long_averaged_z_high_var_or_high_F <- Exp_table_long_averaged_z %>%
filter(gene_ID %in% high_var_or_high_F_genes$gene_ID)
head(Exp_table_long_averaged_z_high_var_or_high_F)
z_score_wide <- Exp_table_long_averaged_z_high_var_or_high_F %>%
mutate(tag = paste(Time, Treatment, sep = "-")) %>%
select(gene_ID, tag, z.score) %>%
pivot_wider(names_from = tag, values_from = z.score) %>%
as.data.frame()
row.names(z_score_wide) <- z_score_wide$gene_ID
head(z_score_wide)
my_network_modules <- read_csv("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/7_GeneCoexpressionAnalysis/AllTrapsAnalysis/NetworkModules/network_modules_annotated.csv")
Exp_table_long_averaged_z_high_var_or_high_F_modules <- Exp_table_long_averaged_z_high_var_or_high_F %>%
inner_join(my_network_modules, by = "gene_ID")
head(Exp_table_long_averaged_z_high_var_or_high_F_modules)
Exp_table_long_averaged_z_high_var_or_high_F_modules <- Exp_table_long_averaged_z_high_var_or_high_F %>%
inner_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, Time,Treatment,mean.logTPM,z.score,module)
head(Exp_table_long_averaged_z_high_var_or_high_F_modules)
modules_mean_z <- Exp_table_long_averaged_z_high_var_or_high_F_modules %>%
group_by(module, Time, Treatment) %>%
summarise(mean.z = mean(z.score)) %>%
ungroup()
head(modules_mean_z)
module_peak_exp <- modules_mean_z %>%
group_by(module) %>%
slice_max(order_by = mean.z, n = 1)
module_peak_exp
modules_mean_z$mean.z %>% summary()
modules_mean_z <- modules_mean_z %>%
mutate(mean.z.clipped = case_when(
mean.z > 2 ~ 2,
mean.z < -2 ~ -2,
T ~ mean.z
))
modules_mean_z_reordered <- modules_mean_z %>%
full_join(module_peak_exp %>%
rename(peak_time = Time) %>%
select(module, peak_time), by = "module") %>%
mutate(module = reorder(module, -peak_time))
head(modules_mean_z_reordered)
modules_mean_z_reordered %>%
ggplot(aes(x = as.factor(Time), y = as.factor(module))) +
facet_grid(. ~ Treatment, scales = "free", space = "free") +
geom_tile(aes(fill = mean.z)) +
scale_fill_gradientn(colors = rev(brewer.pal(11, "RdBu")), limits = c(-2, 2),
breaks = c(-2, 0, 2), labels = c("< -2", "0", "> 2")) +
labs(x = "Time point",
y = "Module",
fill = "z score") +
theme_classic() +
theme(
text = element_text(size = 14),
axis.text = element_text(color = "black"),
legend.position = "top"
)
ggsave("module_heatmap.png", height = 10, width = 8, bg = "white")
orthogroup_count <- read.tsv("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/6_OrthoFinder/OrthoFinderOutputFiles/Orthogroups/Orthogroups.GeneCount.tsv")
orthogroup_count <- read_delim("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/6_OrthoFinder/OrthoFinderOutputFiles/Orthogroups/Orthogroups.GeneCount.tsv")
View(orthogroup_count)
View(orthogroup_count)
View(orthogroup_count)
orthogroup_count %>%
filter(A_coerulea.proteins == 0)
orthogroup_count %>%
filter(A_coerulea.proteins == 0, A_hypochondriacus.proteins == 0)
orthogroup_count %>%
filter(A_coerulea.proteins == 0, A_hypochondriacus.proteins == 0, A_thaliana.proteins == 0, B_vulgaris.proteins == 0)
orthogroup_count %>%
filter(A_coerulea.proteins == 0, A_hypochondriacus.proteins == 0, A_thaliana.proteins == 0, B_vulgaris.proteins == 0, G_max.proteins == 0, L_sativa.proteins == 0, P_amilis.proteins == 0, V_vinifera.proteins == 0)
orthogroup_count %>%
filter(A_coerulea.proteins == 0, A_hypochondriacus.proteins == 0, A_thaliana.proteins == 0, B_vulgaris.proteins == 0, G_max.proteins == 0, L_sativa.proteins == 0, P_amilis.proteins == 0, S_lycopersicum.proteins == 0, V_vinifera.proteins == 0)
orthogroup_count %>%
filter(A_coerulea.proteins == 0, A_hypochondriacus.proteins == 0, A_thaliana.proteins == 0, B_vulgaris.proteins == 0, G_max.proteins == 0, L_sativa.proteins == 0, P_amilis.proteins == 0, S_lycopersicum.proteins == 0, V_vinifera.proteins == 0, !D_muscipula.proteins ==0)
orthogroup_count %>%
filter(A_coerulea.proteins == 0, A_hypochondriacus.proteins == 0, A_thaliana.proteins == 0, B_vulgaris.proteins == 0, G_max.proteins == 0, L_sativa.proteins == 0, P_amilis.proteins == 0, S_lycopersicum.proteins == 0, V_vinifera.proteins == 0, !D_muscipula.proteins ==0, !D_spatulata.proteins == 0, !A_vesiculosa.proteins == 0)
Droseracea_only_orthogroups <- orthogroup_count %>%
filter(A_coerulea.proteins == 0, A_hypochondriacus.proteins == 0, A_thaliana.proteins == 0, B_vulgaris.proteins == 0, G_max.proteins == 0, L_sativa.proteins == 0, P_amilis.proteins == 0, S_lycopersicum.proteins == 0, V_vinifera.proteins == 0, !D_muscipula.proteins ==0, !D_spatulata.proteins == 0, !A_vesiculosa.proteins == 0)
write.csv(Droseracea_only_orthogroups, "droseraceae_only_orthogroups.csv")
genesinorthogroups <- read_delim("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/6_OrthoFinder/OrthoFinderOutputFiles/Orthogroups/Orthogroups.tsv")
View(genesinorthogroups)
View(genesinorthogroups)
View(Droseracea_only_orthogroups)
DroseracaeeOrthogroupGenes <- DroseracaeeOrthogroupGenes %>%
filter(D_muscipula.proteins %in% DroseracaeeOrthogroupGenes$D_muscipula.proteins)
Droseracea_only_orthogroups %>%
filter(D_muscipula.proteins %in% genesinorthogroups$D_muscipula.proteins) %>%
inner_join(genesinorthogroups, by = "D_muscipula.proteins")
Droseracea_only_orthogroups$Orthogroup %>%
filter(D_muscipula.proteins %in% genesinorthogroups$D_muscipula.proteins) %>%
inner_join(genesinorthogroups, by = "D_muscipula.proteins")
Droseracea_only_orthogroups <-Droseracea_only_orthogroups$Orthogroup
Droseracea_only_orthogroups <-as.data.frame(Droseracea_only_orthogroups)
row.names(Droseracea_only_orthogroups) <- Droseracea_only_orthogroups$orthogroups
View(Droseracea_only_orthogroups)
Droseracea_only_orthogroups <-as.data.frame(Droseracea_only_orthogroups)
row.names(Droseracea_only_orthogroups) <- Droseracea_only_orthogroups$orthogroups
filter(genesinorthogroups,
Droseracea_only_orthogroups %in% Droseracea_only_orthogroups$Droseracea_only_orthogroups)
filter(Droseracea_only_orthogroups,
genesinorthogroups %in% Droseracea_only_orthogroups$Droseracea_only_orthogroups)
filter(Droseracea_only_orthogroups,
genesinorthogroups %in% Droseracea_only_orthogroups$Droseracea_only_orthogroups)
colnames(Droseracea_only_orthogroups) <- orthogroups
colnames(orthogroups) <- Droseracea_only_orthogroups
Droseracea_only_orthogroups %>% rename(orthogroup = `Droseracea_only_orthogroups`)
Droseracea_only_orthogroups <- Droseracea_only_orthogroups %>% rename(orthogroup = `Droseracea_only_orthogroups`)
filter(Droseracea_only_orthogroups,
genesinorthogroups %in% Droseracea_only_orthogroups$orthogroup)
filter(genesinorthogroups,
orthogroup %in% Droseracea_only_orthogroups$orthogroup)
View(Exp_table_long_averaged_z)
filter(Droseracea_only_orthogroups,
orthogroup %in% genesinorthogroups$Orthogroup)
filter(Droseracea_only_orthogroups,
orthogroup %in% genesinorthogroups$D_muscipula.proteins)
filter(Droseracea_only_orthogroups,
orthogroup %in% genesinorthogroups)
filter(genesinorthogroups,
orthogroup %in% Droseracea_only_orthogroups)
filter(genesinorthogroups,
orthogroup %in% Droseracea_only_orthogroups$orthogroup)
filter(Droseracea_only_orthogroups,
orthogroup %in% genesinorthogroups$Orthogroup)
filter(Droseracea_only_orthogroups,
Orthogroup %in% genesinorthogroups$Orthogroup)
filter(Droseracea_only_orthogroups,
orthogroup %in% genesinorthogroups$Orthogroup)
filter(Droseracea_only_orthogroups,
orthogroup %in% genesinorthogroups)
filter(genesinorthogroup,
Orthogroup %in% Droseracea_only_orthogroups$orthogroup)
filter(genesinorthogroups,
Orthogroup %in% Droseracea_only_orthogroups$orthogroup)
filter(genesinorthogroups,
Orthogroup %in% Droseracea_only_orthogroups$orthogroup) %>%
select(D_muscipula.proteins)
filter(genesinorthogroups,
Orthogroup %in% Droseracea_only_orthogroups$orthogroup) %>%
select(Orthogroup, D_muscipula.proteins)
filter(genesinorthogroups,
Orthogroup %in% Droseracea_only_orthogroups$orthogroup) %>%
select(Orthogroup, D_muscipula.proteins) %>%
uniq(D_muscipula.proteins)
filter(genesinorthogroups,
Orthogroup %in% Droseracea_only_orthogroups$orthogroup) %>%
select(Orthogroup, D_muscipula.proteins)
D_muscipula_genes_in_Droseracea_only_orthogroups <- filter(genesinorthogroups,
Orthogroup %in% Droseracea_only_orthogroups$orthogroup) %>%
select(Orthogroup, D_muscipula.proteins, )
Droseracea_genes_in_Droseracea_only_orthogroups <- filter(genesinorthogroups,
Orthogroup %in% Droseracea_only_orthogroups$orthogroup)
write.csv(Droseracea_genes_in_Droseracea_only_orthogroups, "Droseracea_genes_in_Droseracea_only_orthogroups.csv")
write.csv(D_muscipula_genes_in_Droseracea_only_orthogroups, "D_muscipula_genes_in_Droseracea_only_orthogroups.csv")
separate_rows(D_muscipula_genes_in_Droseracea_only_orthogroups, country, sep = ", ")
View(D_muscipula_genes_in_Droseracea_only_orthogroups)
separate_rows(D_muscipula_genes_in_Droseracea_only_orthogroups, D_muscipula.proteins, sep = ", ")
separate_rows(D_muscipula_genes_in_Droseracea_only_orthogroups, D_muscipula.proteins, sep = ", ", print(n=100))
separate_rows(D_muscipula_genes_in_Droseracea_only_orthogroups, D_muscipula.proteins, sep = ", ")
test <- separate_rows(D_muscipula_genes_in_Droseracea_only_orthogroups, D_muscipula.proteins, sep = ", ")
View(test)
test <- separate_rows(D_muscipula_genes_in_Droseracea_only_orthogroups, D_muscipula.proteins, sep = ", ") %>%
unique(D_muscipula.proteins)
test <- separate_rows(D_muscipula_genes_in_Droseracea_only_orthogroups, D_muscipula.proteins, sep = ", ") %>%
unique()
test <- separate_rows(D_muscipula_genes_in_Droseracea_only_orthogroups, D_muscipula.proteins, sep = ", ") %>%
unique()
View(test)
unique(test$D_muscipula.proteins)
test <-
separate_rows(D_muscipula_genes_in_Droseracea_only_orthogroups, D_muscipula.proteins, sep = ", ")
test <- separate_rows(D_muscipula_genes_in_Droseracea_only_orthogroups, D_muscipula.proteins, sep = ", ")
View(test)
View(funct_anno)
filter(funct_anno,
annotation %in% test$D_muscipula.proteins) %>%
filter(funct_anno,
annotation %in% test$D_muscipula.proteins)
filter(test,
D_muscipula.proteins %>% funct_anno$annotation)
filter(test,
D_muscipula.proteins %in% funct_anno$annotation)
filter(funct_anno,
gene_ID %in% test)
filter(funct_anno,
gene_ID %in% test$D_muscipula.proteins)
annotated_orthgroupgenes<- filter(funct_anno,
gene_ID %in% test$D_muscipula.proteins)
write.csv(annotated_orthgroupgenes, "annotated_D_muscipula_genes_in_Droseracea_only_orthogroups.csv")
View(annotated_orthgroupgenes)
annotated_orthgroupgenes<- filter(funct_anno,
gene_ID %in% test$D_muscipula.proteins)
annotated_orthgroupgenes %>%
left_join(my_network_modules, by = "gene_ID")
annotated_orthgroupgenes %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, AT_gene_id, annotation, module)
annotated_orthgroupgenes <- annotated_orthgroupgenes %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, AT_gene_id, annotation, module)
write.csv(annotated_orthgroupgenes, "annotated_D_muscipula_genes_in_Droseracea_only_orthogroups.csv")
D_muscipula_genes_in_Droseracea_only_orthogroups <- filter(genesinorthogroups,
Orthogroup %in% Droseracea_only_orthogroups$orthogroup) %>%
select(Orthogroup, D_muscipula.proteins, )
D_muscipula_genes_in_Droseracea_only_orthogroups <- separate_rows(D_muscipula_genes_in_Droseracea_only_orthogroups, D_muscipula.proteins, sep = ", ")
annotated_orthgroupgenes<- filter(funct_anno,
gene_ID %in% D_muscipula_genes_in_Droseracea_only_orthogroups$D_muscipula.proteins)
D_muscipula_genes_in_Droseracea_only_orthogroups <- separate_rows(D_muscipula_genes_in_Droseracea_only_orthogroups, D_muscipula.proteins, sep = ", ")
annotated_orthgroupgenes<- filter(funct_anno,
gene_ID %in% D_muscipula_genes_in_Droseracea_only_orthogroups$D_muscipula.proteins)
D_muscipula_genes_in_Droseracea_only_orthogroups <- separate_rows(D_muscipula_genes_in_Droseracea_only_orthogroups, D_muscipula.proteins, sep = ", ")
annotated_orthgroupgenes <- D_muscipula_genes_in_Droseracea_only_orthogroups %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, AT_gene_id, annotation, module)
View(my_network_modules)
D_muscipula_genes_in_Droseracea_only_orthogroups <- D_muscipula_genes_in_Droseracea_only_orthogroups %>% rename(gene_ID = `D_muscipula.proteins`)
annotated_orthgroupgenes <- D_muscipula_genes_in_Droseracea_only_orthogroups %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, AT_gene_id, annotation, module)
annotated_orthgroupgenes <- D_muscipula_genes_in_Droseracea_only_orthogroups %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, ATgene_id, annotation, module)
annotated_orthgroupgenes <- D_muscipula_genes_in_Droseracea_only_orthogroups %>%
left_join(my_network_modules, by = "gene_ID")
annotated_orthgroupgenes <- D_muscipula_genes_in_Droseracea_only_orthogroups %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(Orthogroup, gene_ID,  module, ATgene_ID,TopBLASTHit_Name)
annotated_orthgroupgenes <- D_muscipula_genes_in_Droseracea_only_orthogroups %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(Orthogroup, gene_ID,  module, ATgene_ID, TopBLASTHit_Symbol, TopBLASTHit_Name, TopBLASTHit_Position)
write.csv(annotated_orthgroupgenes, "annotated_D_muscipula_genes_in_Droseracea_only_orthogroups.csv")
