if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Biostrings")
set.seed()
library(Biostrings)
setwd(/Users/summerblanco/Desktop/Github/G_maculatum_novogene/)
setwd("Users/summerblanco/Desktop/Github/G_maculatum_novogene/")
spec1_31 <- read.table("reads.histo")
spec1_31 <- read.table("reads.histo")
install.packages("read.table")
library(read.table)
library("read.table")
install.packages("read.table")
install.packages("read.Lines")
library("read.table")
spec1_31 <- read.table("reads.histo")
install.packages("read.delim")
install.packages("findGSE")
install.packages("findGSE")
install.packages('devtools')
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
install.packages("B243997")
updateR(admin_password = 'B243997')
install_github('andreacirilloac/updateR')
library(updateR)
library('updateR')
install.packages("findGSE")
install.packages('sleuth')
library("sleuth")
install.packages("sleuth")
install.packages("sleuth")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.packages("BiocManager")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("pachterlab/sleuth")
install.packages(org.At.tair.db)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.At.tair.db")
library("org.At.tair.db")
genes <- c('AT1G26480',
'AT4G09980',
'AT4G11270',
'AT3G22370',
'AT3G19830',
'AT2G30970',
'AT2G02960',
'AT4G25800',
'AT3G08860',
'AT1G30755',
'AT5G63770')
org.At.tair.GO(genes)
org.At.tairGO(genes)
org.At.tairGO(genes)
org.At.tairGO(genes)
x <- org.At.tairGO
mapped_genes <- mappedkeys(x)
xx <- as.list(x[mapped_genes])
if(length(xx) > 0) {
# Try the first one
got <- xx[[1]]
got[[1]][["GOID"]]
got[[1]][["Ontology"]]
got[[1]][["Evidence"]]
}
genes <- org.At.tairGO
mapped_genes <- mappedkeys(genes)
xx <- as.list(genes[mapped_genes])
if(length(xx) > 0) {
# Try the first one
got <- xx[[1]]
got[[1]][["GOID"]]
got[[1]][["Ontology"]]
got[[1]][["Evidence"]]
}
genes <- org.At.tairGO
View(genes)
mapped_genes <- mappedkeys(genes)
View(xx)
if(length(xx) > 0) {
# Try the first one
got <- xx[[1]]
got[[1]][["GOID"]]
got[[1]][["Ontology"]]
got[[1]][["Evidence"]]
}
xx <- as.list(org.At.tairGO2TAIR)
View(xx)
##################################
library(tidyverse)
library(igraph)
library(ggraph)
library(readxl)
library(patchwork)
library(RColorBrewer)
library(viridis)
library("tximport")
set.seed(666)
resultdir <- "/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/7_GeneCoexpressionAnalysis/AllTrapsAnalysis"   # you need to modify this line to match the path made by your BASH script
setwd(resultdir)
orthogroup_count <- read_delim("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/6_OrthoFinder/OrthoFinderOutputFiles/Orthogroups/Orthogroups.GeneCount.tsv")
Droseracea_only_orthogroups <- orthogroup_count %>%
filter(A_coerulea.proteins == 0, A_hypochondriacus.proteins == 0, A_thaliana.proteins == 0, B_vulgaris.proteins == 0, G_max.proteins == 0, L_sativa.proteins == 0, P_amilis.proteins == 0, S_lycopersicum.proteins == 0, V_vinifera.proteins == 0, !D_muscipula.proteins ==0, !D_spatulata.proteins == 0, !A_vesiculosa.proteins == 0)
View(Droseracea_only_orthogroups)
View(orthogroup_count)
orthogroup_count %>%
filter(D_muscipula.proteins > A_thaliana.proteins)
many_Dm_to_AT_orthogroups<- orthogroup_count %>%
filter(D_muscipula.proteins > A_thaliana.proteins)
View(many_Dm_to_AT_orthogroups)
write.csv(many_Dm_to_AT_orthogroups, "many_Dm_to_AT_orthogroups.csv")
funct_anno <- read_delim("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/5_BLAST/AllDmProteinsBLASTresults/DmProteinsSwissprotBLASTconcat.txt",
delim = "\t", col_names = F, col_types = cols())
funct_anno <- funct_anno %>% select(X1:X3) %>%
rename(gene_ID = X1, AT_gene_id = X2, annotation = X3)
View(funct_anno)
View(many_Dm_to_AT_orthogroups)
View(funct_anno)
View(orthogroup_count)
View(many_Dm_to_AT_orthogroups)
View(orthogroup_count)
View(Droseracea_only_orthogroups)
View(many_Dm_to_AT_orthogroups)
D_muscipula_genes_in_Droseracea_only_orthogroups <- filter(genesinorthogroups,
Orthogroup %in% Droseracea_only_orthogroups$orthogroup) %>%
select(Orthogroup, D_muscipula.proteins, )
Droseracea_only_orthogroups <- orthogroup_count %>%
filter(A_coerulea.proteins == 0, A_hypochondriacus.proteins == 0, A_thaliana.proteins == 0, B_vulgaris.proteins == 0, G_max.proteins == 0, L_sativa.proteins == 0, P_amilis.proteins == 0, S_lycopersicum.proteins == 0, V_vinifera.proteins == 0, !D_muscipula.proteins ==0, !D_spatulata.proteins == 0, !A_vesiculosa.proteins == 0)
many_Dm_to_AT_orthogroups<- orthogroup_count %>%
filter(D_muscipula.proteins > A_thaliana.proteins)
Droseracea_only_orthogroups <-Droseracea_only_orthogroups$Orthogroup
Droseracea_only_orthogroups <-as.data.frame(Droseracea_only_orthogroups)
Droseracea_only_orthogroups
genesinorthogroups <- read_delim("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/6_OrthoFinder/OrthoFinderOutputFiles/Orthogroups/Orthogroups.tsv")
View(genesinorthogroups)
Droseracea_only_orthogroups <- Droseracea_only_orthogroups %>% rename(orthogroup = `Droseracea_only_orthogroups`)
Droseracea_genes_in_Droseracea_only_orthogroups <- filter(genesinorthogroups,
Orthogroup %in% Droseracea_only_orthogroups$orthogroup)
D_muscipula_genes_in_Droseracea_only_orthogroups <- filter(genesinorthogroups,
Orthogroup %in% Droseracea_only_orthogroups$orthogroup) %>%
select(Orthogroup, D_muscipula.proteins, )
View(Droseracea_genes_in_Droseracea_only_orthogroups)
View(Droseracea_only_orthogroups)
View(Droseracea_genes_in_Droseracea_only_orthogroups)
View(genesinorthogroups)
many_Dm_only_orthogroups <- filter(genesinorthogroups,Orthogroup %in% many_Dm_to_AT_orthogroups$orthogroup)
many_Dm_only_orthogroups <- filter(genesinorthogroups,Orthogroup %in% many_Dm_to_AT_orthogroups$Orthogroup)
View(many_Dm_only_orthogroups)
many_Dm_only_orthogroups <- filter(funct_anno,
gene_ID %in% D_muscipula_genes_in_Droseracea_only_orthogroups$D_muscipula.proteins)
many_Dm_only_orthogroups <- filter(genesinorthogroups,Orthogroup %in% many_Dm_only_orthogroups$Orthogroup) %>%
select(Orthogroup, D_muscipula.proteins)
many_Dm_only_orthogroups <- filter(genesinorthogroups,Orthogroup %in% many_Dm_to_AT_orthogroups$Orthogroup)
many_Dm_only_orthogroups <- filter(genesinorthogroups,Orthogroup %in% many_Dm_only_orthogroups$Orthogroup) %>%
select(Orthogroup, D_muscipula.proteins)
many_Dm_only_orthogroups <- separate_rows(many_Dm_only_orthogroups, D_muscipula.proteins, sep = ", ")
many_Dm_only_orthogroups <- many_Dm_only_orthogroups %>% rename(gene_ID = `D_muscipula.proteins`)
many_Dm_only_orthogroups_annotated<- filter(funct_anno,
gene_ID %in% many_Dm_only_orthogroups$D_muscipula.proteins)
many_Dm_only_orthogroups_annotated<- filter(funct_anno,
gene_ID %in% many_Dm_only_orthogroups$gene_ID)
my_network_modules <- read_csv("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/7_GeneCoexpressionAnalysis/AllTrapsAnalysis/NetworkModules/network_modules_annotated.csv")
many_Dm_only_orthogroups_annotated <- many_Dm_only_orthogroups %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(Orthogroup, gene_ID,  module, ATgene_ID, TopBLASTHit_Symbol, TopBLASTHit_Name, TopBLASTHit_Position)
View(many_Dm_to_AT_orthogroups)
View(many_Dm_only_orthogroups_annotated)
View(my_network_modules)
View(many_Dm_only_orthogroups_annotated)
write.csv(many_Dm_to_AT_orthogroups, "many_Dm_to_AT_orthogroups_annotated.csv")
write.csv(many_Dm_to_AT_orthogroups, "many_Dm_to_AT_orthogroups.csv")
write.csv(many_Dm_to_AT_orthogroups, "many_Dm_to_AT_orthogroups.csv")
write.csv(many_Dm_only_orthogroups_annotated, "many_Dm_to_AT_orthogroups_annotated.csv")
Sleuth_1hr <- read_delim("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/3_sleuth/PreyVsNoPrey_1hr/DEGcsvs/SleuthList1HrAnnotated.csv")
View(Sleuth_1hr)
View(my_network_modules)
Sleuth_1hr_modules<- Sleuth_1hr %>%
rename(gene_ID = `target_id`) %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID,  module, ATgene_ID, Symbol, Description, Position, DE_Direction, module)
View(Sleuth_1hr_modules)
Sleuth_1hr_modules<- Sleuth_1hr %>%
rename(gene_ID = `target_id`) %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, ATgene_ID, Symbol, Description, Position, DE_Direction, module)
View(orthogroup_count)
View(genesinorthogroups)
# get # of genes in each orthogroup
orthogroup_count <- read_delim("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/6_OrthoFinder/OrthoFinderOutputFiles/Orthogroups/Orthogroups.GeneCount.tsv")
# find orthogroups specific to Droseraceae
Droseracea_only_orthogroups <- orthogroup_count %>%
filter(A_coerulea.proteins == 0, A_hypochondriacus.proteins == 0, A_thaliana.proteins == 0, B_vulgaris.proteins == 0, G_max.proteins == 0, L_sativa.proteins == 0, P_amilis.proteins == 0, S_lycopersicum.proteins == 0, V_vinifera.proteins == 0, !D_muscipula.proteins ==0, !D_spatulata.proteins == 0, !A_vesiculosa.proteins == 0)
Droseracea_only_orthogroups <-Droseracea_only_orthogroups$Orthogroup
Droseracea_only_orthogroups <-Droseracea_only_orthogroups$Orthogroup %>% as.data.frame(Droseracea_only_orthogroups)
Droseracea_only_orthogroups <-Droseracea_only_orthogroups$Orthogroup %>% as.data.frame()
Droseracea_only_orthogroups <-Droseracea_only_orthogroups$Orthogroup %>%
Droseracea_only_orthogroups <-as.data.frame(Droseracea_only_orthogroups)
Droseracea_only_orthogroups <-Droseracea_only_orthogroups$Orthogroup %>%
Droseracea_only_orthogroups <-as.data.frame(Droseracea_only_orthogroups)
Droseracea_only_orthogroups <-Droseracea_only_orthogroups$Orthogroup
Droseracea_only_orthogroups <-as.data.frame(Droseracea_only_orthogroups)
genesinorthogroups <- read_delim("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/6_OrthoFinder/OrthoFinderOutputFiles/Orthogroups/Orthogroups.tsv")
View(genesinorthogroups)
Sleuth_1hr_modules<- Sleuth_1hr %>%
rename(gene_ID = `target_id`) %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, ATgene_ID, Symbol, Description, Position, DE_Direction, module) %>%
write.csv(, "")
View(funct_anno)
View(genes)
View(genesinorthogroups)
View(genesinorthogroups)
View(genesinorthogroups)
Sleuth_1hr_modules<- Sleuth_1hr %>%
rename(gene_ID = `target_id`) %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, ATgene_ID, Symbol, Description, Position, DE_Direction, module) %>%
filter(genesinorthogroups,
Orthogroup %in% Sleuth_1hr_modules$gene_ID)
Sleuth_1hr_modules<- Sleuth_1hr %>%
rename(gene_ID = `target_id`) %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, ATgene_ID, Symbol, Description, Position, DE_Direction, module) %>%
separate_rows(genesinorthogroups, D_muscipula.proteins, sep = ", ")
Sleuth_1hr_modules<- Sleuth_1hr %>%
rename(gene_ID = `target_id`) %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, ATgene_ID, Symbol, Description, Position, DE_Direction, module) %>%
expanded_genesinorthogroups <- separate_rows(genesinorthogroups, D_muscipula.proteins, sep = ", ")
expanded_genesinorthogroups <- separate_rows(genesinorthogroups, D_muscipula.proteins, sep = ", ")
View(expanded_genesinorthogroups)
Sleuth_1hr_modules<- Sleuth_1hr %>%
rename(gene_ID = `target_id`) %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, ATgene_ID, Symbol, Description, Position, DE_Direction, module) %>%
left_join(expanded_genesinorthogroups$D_muscipula.proteins, by=gene_ID)
expanded_genesinorthogroups <- separate_rows(genesinorthogroups, D_muscipula.proteins, sep = ", ") %>%
rename(gene_ID = `D_muscipula.proteins`)
Sleuth_1hr_modules<- Sleuth_1hr %>%
rename(gene_ID = `target_id`) %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, ATgene_ID, Symbol, Description, Position, DE_Direction, module) %>%
left_join(expanded_genesinorthogroups$D_muscipula.proteins, by=gene_ID)
Sleuth_1hr_modules<- Sleuth_1hr %>%
rename(gene_ID = `target_id`) %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, ATgene_ID, Symbol, Description, Position, DE_Direction, module) %>%
left_join(expanded_genesinorthogroups$gene_ID, by= "gene_ID")
Sleuth_1hr_modules<- Sleuth_1hr %>%
rename(gene_ID = `target_id`) %>%
left_join(my_network_modules, by = "gene_ID") %>%
select(gene_ID, ATgene_ID, Symbol, Description, Position, DE_Direction, module) %>%
left_join(expanded_genesinorthogroups, by= "gene_ID")
View(Sleuth_1hr_modules)
Sleuth_1hr_modules<- Sleuth_1hr %>%
rename(gene_ID = `target_id`) %>%
left_join(my_network_modules, by = "gene_ID") %>%
left_join(expanded_genesinorthogroups, by= "gene_ID") %>%
select(gene_ID, ATgene_ID, Symbol, Description, Position, DE_Direction, module, Orthogroup)
write.csv(Sleuth_1hr_modules_orthogroups, "/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/3_sleuth/PreyVsNoPrey_1hr/DEGcsvs/SleuthList1HrAnnotated_modulesandorthogroups.csv"")
write.csv(Sleuth_1hr_modules_orthogroups, "/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/3_sleuth/PreyVsNoPrey_1hr/DEGcsvs/SleuthList1HrAnnotated_modulesandorthogroups.csv")
write.csv(Sleuth_1hr_modules_orthogroups, "/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/3_sleuth/PreyVsNoPrey_1hr/DEGcsvs/SleuthList1HrAnnotated_modulesandorthogroups.csv")
Sleuth_1hr_modules_orthogroups<- Sleuth_1hr %>%
rename(gene_ID = `target_id`) %>%
left_join(my_network_modules, by = "gene_ID") %>%
left_join(expanded_genesinorthogroups, by= "gene_ID") %>%
select(gene_ID, ATgene_ID, Symbol, Description, Position, DE_Direction, module, Orthogroup)
write.csv(Sleuth_1hr_modules_orthogroups, "/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/3_sleuth/PreyVsNoPrey_1hr/DEGcsvs/SleuthList1HrAnnotated_modulesandorthogroups.csv")
Sleuth_24hr <- read_delim("/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/3_sleuth/PreyVsNoPrey_24hr/DEGcsvs/SleuthList24HrAnnotated.csv")
Sleuth_24hr_modules_orthogroups<- Sleuth_24hr %>%
rename(gene_ID = `target_id`) %>%
left_join(my_network_modules, by = "gene_ID") %>%
left_join(expanded_genesinorthogroups, by= "gene_ID") %>%
select(gene_ID, ATgene_ID, Symbol, Description, Position, DE_Direction, module, Orthogroup)
View(Sleuth_24hr_modules_orthogroups)
write.csv(Sleuth_24hr_modules_orthogroups, "/Users/summerblanco/Desktop/Github/2022VenusFlyTrap/Cleaned_Workflow/Results/3_sleuth/PreyVsNoPrey_24hr/DEGcsvs/SleuthList24HrAnnotated_modulesandorthogroups.csv")
